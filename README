s3rl: an erlang wrapper for Amazon's S3 storage service
--------------------------------------------------------

s3rl is a fork from code originally developed by Andrew Birkett 
<andy@nobugs.org> called s3erl. It was then forked by Eric Cestari
<eric@ohmforce.com> and renamed to erls3. Eric and a couple of other 
contributors continued its development until 2010. It has been forked
several times since then with minor changes along the way. See forks and
commits using Github's web interface for more information.

What is it?
-----------

Amazon's S3 storage service is a "pay as you go" service for storing
files.  You can use it to serve web content, backup your files, etc.

This library provides an Erlang-based interface for Amazon S3 storage 
service by wrapping its REST interface through Erlang/OTP function calls.

See https://aws.amazon.com/s3/ for more information.

Intent
-------
Do not use it to upload multiple Gb files. Everything is moved around in memory.
However it should behave pretty well under high load with moderately sized packets.

Requirements
------------

- OTP-R12B (released on 2007/12/05). 

- An Amazon Web Services account - see https://aws.amazon.com/

- optionally : merle and ketama for caching
    merle is available here : http://github.com/cstar/merle/tree/master
    libketama is available here : http://www.audioscrobbler.net/development/ketama/
    
= BUILDING =

./rebar compile
./rebar install

= Configuration = 

You'll need to set your credentials to Amazon S3:
- by passing them as OTP application parameters or
- by setting the AMAZON_ACCESS_KEY_ID and AMAZON_SECRET_ACCESS_KEY environment variable (recommended)

= TODO = 
- support ACL configuration
- Improve error handling
- Support for EU-based S3 buckets
- Support for streaming objects to/from disk (should be easy with ibrowse)
- Usage will probably show some bugs and their ugly faces.

Version History
---------------
v0.5 - 2009/03/09
  - automatic retries in case of (always transient) failures
  - get_objects : fetching objets from S3 in parallel
  - bugfixes (thanks magog)
  - implemented memcached caching with merle and ketama (get this version : http://github.com/cstar/merle/tree/master)
  
v0.4 - 2009/03/02
  - added support for HEAD
  - Content-MD5 is implemented
  - x-amz-meta-* headers can be added.
  - implemented a simple POST policy file encoding.

v0.3 - 2009/03/02

  - imported into github
  - OTP'fied the code
  - http calls are now asynchronous
  - SSL supported
 

v0.2 - 2007/12/29

  - Fix timezone bug in Date: header

v0.1 - 2007/12/07

  - First release, "works for me" (tm)
  - Bucket operations: list, create, delete
  - Object operations: read, write, list, delete

 Missing features:


License
-------

Released under the GNU General Public License (GPL) v2.


From Eric to Andy
------------------
Thanks for the code mate !
